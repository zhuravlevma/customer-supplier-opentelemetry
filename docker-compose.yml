version: '3.8'

# networks:
#   vpcbr: # virtual network name
#     driver: bridge
#     ipam:
#      config: # here, we define our ip space
#        - subnet: 10.5.0.0/16
#          gateway: 10.5.0.1

services:
  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - 6831:6831/udp
  #     - 6832:6832/udp
  #     - 16686:16686
  #     - 5778:5778
  #     - 4317:4317
  #     - 4318:4318
  #     - 14250:14250
  #     - 14268:14268
  #     - 14269:14269
  #     - 9411:9411
  #   hostname: jaeger
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    ports:
      - "9090:9090"
    depends_on:
      - nestjs-supplier
      - nestjs-customer
      - nestjs-customer2
    restart: always

  nestjs-supplier:
    build:
      context: ./supplier
      dockerfile: ./Dockerfile
    ports:
      - 9001:9001
      - 9464:9464
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - kafka
      - tempo-query
    restart: on-failure
  nestjs-customer:
    build:
      context: ./customer
      dockerfile: ./Dockerfile
    ports:
      - 4000:4000
      - 9465:9465
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - kafka
      - nestjs-supplier
      - nestjs-customer2
      - tempo-query
    restart: on-failure
  nestjs-customer2:
    build:
      context: ./customer2
      dockerfile: ./Dockerfile
    ports:
      - 9000:9000
      - 9466:9466
    depends_on:
      - kafka
      - tempo-query
    volumes:
      - ./data/logs:/app/logs
    restart: on-failure

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    depends_on:
      - zookeeper

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    ports:
      - "14268"      # jaeger ingest, Jaeger - Thrift HTTP
      - "14250"      # Jaeger - GRPC
      - "55680"      # OpenTelemetry
      - "3100"       # tempo
      - "16686"
      - "6831/udp"   # Jaeger - Thrift Compact
      - "6832/udp"   # Jaeger - Thrift Binary

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/promtail-local.yaml
    volumes:
      - ./etc/promtail-local.yaml:/etc/promtail/promtail-local.yaml
      - ./data/logs:/app/logs
    depends_on:
      - nestjs-supplier
      - nestjs-customer
      - nestjs-customer2
      - loki
    # networks:
    #   vpcbr:

  tempo-query:
    image: grafana/tempo-query:latest
    command: ["--grpc-storage-plugin.configuration-file=/etc/tempo-query.yaml"]
    volumes:
      - ./etc/tempo-query.yaml:/etc/tempo-query.yaml
    ports:
      - "16686:16686"  # jaeger-ui
    depends_on:
      - tempo

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - "3101:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_AGENT_PORT=14268
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml
      - ./data/loki-data:/tmp/loki
    restart: always
    # networks:
    #   vpcbr: # this is the place where we assign the static ipv4 address
    #     ipv4_address: 10.5.0.2

  volume_exporter:
    image: mnadeem/volume_exporter
    command: ["--volume-dir=tempo:/tmp/tempo", "--volume-dir=logs:/app/logs", "--volume-dir=loki:/tmp/loki"]
    volumes:
      - ./data/logs:/app/logs
      - ./data/tempo-data:/tmp/tempo
      - ./data/loki-data:/tmp/loki
    ports:
      - 9889:9888

  grafana:
    image: grafana/grafana:8.2.6-ubuntu
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo-query
      - loki
      - volume_exporter


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
